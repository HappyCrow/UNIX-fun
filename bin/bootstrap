#!/usr/bin/env ocamlscript
Ocaml.packs := ["batteries";"minicli"]
--
(* random bootstrap sample (with replacement) from the lines of a file *)

open Printf

module A = BatArray
module CLI = Minicli.CLI
module L = BatList

let with_in_file fn f =
  let input = open_in_bin fn in
  let res = f input in
  close_in input;
  res

let with_out_file fn f =
  let output = open_out_bin fn in
  let res = f output in
  close_out output;
  res

let lines_of_file fn =
  with_in_file fn (fun input ->
      let res, exn = L.unfold_exc (fun () -> input_line input) in
      if exn <> End_of_file then
        raise exn
      else res
    )

let array_rand_elt rng a =
  let n = A.length a in
  let i = BatRandom.State.int rng n in
  Array.unsafe_get a i

let () =
  let argc, args = CLI.init () in
  if argc = 1 then
    (eprintf "usage:\n\
              %s -i <input_file> -o <output_file> -n <int>\n"
       Sys.argv.(0);
     exit 1);
  let n = CLI.get_int ["-n"] args in
  let input_fn = CLI.get_string ["-i"] args in
  let output_fn = CLI.get_string ["-o"] args in
  CLI.finalize();
  let rng =
    (* non repeatable *)
    BatRandom.State.make_self_init () in
  let all_lines = A.of_list (lines_of_file input_fn) in
  with_out_file output_fn (fun out ->
      for _i = 1 to n do
        fprintf out "%s\n" (array_rand_elt rng all_lines)
      done
    )
